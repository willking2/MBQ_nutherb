ExpA
View(ExpA)
plot(chg_mass ~ trt, data = ExpA)
plot(log_chg_mass ~ trt, data = ExpA)
fligner.test(log_chg_mass ~ interaction(cage, sed_nut, watercol_nut), data = ExpA)
ExpA$trans_pctchg_biomass <- asin(sqrt(pctchg_biomass))
ExpA$trans_pctchg_biomass <- asin(sqrt(pctchg_biomass+5))
ExpA$trans_pctchg_biomass <- asin(sqrt(pctchg_biomass+50))
## MBQ nutrients and herbivory analysis
## Experiment A
## GREX Moorea Winer 2014
# name data table
ExpA <- ExpA_grugosa_masses
ExpA
# remove two rows of missing data (lost OSW treatments)
ExpA <- ExpA[-c(39,40), ]
ExpA
# box plots
plot(log_chg_mass ~ trt, data = ExpA)
# Fligner-Killeen test of homogeneity of variances
## MBQ nutrients and herbivory analysis
## Experiment A
## GREX Moorea Winer 2014
# name data table
ExpA <- ExpA_grugosa_masses
ExpA
# remove two rows of missing data (lost OSW treatments)
ExpA <- ExpA[-c(39,40), ]
ExpA
# box plots
plot(chg_mass ~ trt, data = ExpA)
# Fligner-Killeen test of homogeneity of variances
fligner.test(chg_mass ~ interaction(cage, sed_nut, watercol_nut), data = ExpA)
ExpA
?arcsin
?asin
ExpA$arcsin_chg_mass <- asin(ExpA$chg_mass)
View(ExpA)
ExpA$trans_chg_mass <- log((ExpA$chg_mass)+5)
View(ExpA)
ExpA$asin_chg_mass <- NULL
View(ExpA)
ExpA$arcsin_chg_mass <- NULL
View(ExpA)
plot(chg_mass ~ trt, data = ExpA)
plot(trans_chg_mass ~ trt, data = ExpA)
ExpA$trans_chg_mass <- NULL
ExpA$trans_chg_mass <- sqrt((ExpA$chg_mass)+5)
ExpA
plot(trans_chg_mass ~ trt, data = ExpA)
fligner.test(trans_chg_mass ~ interaction(cage, sed_nut, watercol_nut), data = ExpA)
View(ExpA)
ExpA$trans_chg_mass <- NULL
ExpA
data.table <- c(2.3193
3.4641
1.8951
2.3665
1.9541
2.0766
3.0499
1.8564
2.2505
1.9541
1.9343
1.7808
1.7995
1.6181
2.4147
2.2962
2.1837
2.883
1.2392
1.2083
1.7808
2.5933
1.8757
2.5147
2.4641
2.0146
2.2732
2.3665
2.0766
2.3905
2.2505
2.2505
1.8183
1.6357
1
1.3657
2.1619
2.3905
2.4147
1.8183
1.9541
1.5315
1.7808
2.0558
2.3665
1.6892
2.0977
1.5658
2.0977
2.1619
1.6534
1.7808
2.7612
2.0351
1.4808
2.0146
2.1619
1.6713
1.6005
1.8373
1.9943
1.6892
)
ExpA$trans_chg_mass <- -1/((ExpA$chg_mass)+5)
plot(trans_chg_mass ~ trt, data = ExpA)
fligner.test(trans_chg_mass ~ interaction(cage, sed_nut, watercol_nut), data = ExpA)
ExpA$trans_chg_mass <- 1/((ExpA$chg_mass)+5)
plot(trans_chg_mass ~ trt, data = ExpA)
fligner.test(trans_chg_mass ~ interaction(cage, sed_nut, watercol_nut), data = ExpA)
ExpA$trans_chg_mass <- 1/(ExpA$chg_mass)
# box plots
plot(trans_chg_mass ~ trt, data = ExpA)
# Fligner-Killeen test of homogeneity of variances
fligner.test(trans_chg_mass ~ interaction(cage, sed_nut, watercol_nut), data = ExpA)
View(ExpA)
?residuals
r1 <- lm(chg_mass ~ trt)
resid(r1)
ExpA
r1 <- lm(ExpA$chg_mass ~ trt)
resid(r1)
r1 <- lm(ExpA$chg_mass ~ ExpA$trt)
resid(r1)
plot(density(resid(r1)))
qqnorm(resid(r1))
qqline(resid(r1))
mean(r1)
?resid
plot(resid(r1) ~ ExpA$chg_mass)
plot(trans_chg_mass ~ trt, data = ExpA)
r2 <- lm(ExpA$trans_chg_mass ~ ExpA$trt)
resid(r2)
qqnorm(resid(r2))
qqline(resid(r2)
View(ExpA)
View(ExpA)
r2 <- lm(ExpA$trans_chg_mass ~ ExpA$trt)
fligner.test(trans_chg_mass ~ interaction(cage, sed_nut, watercol_nut), data = ExpA)
plot(resid(r1) ~ ExpA$chg_mass)
plot(resid(r1) ~ ExpA$chg_mass)
r1 <- lm(ExpA$chg_mass ~ ExpA$trt)
resid(r1)
qqnorm(resid(r1))
qqline(resid(r1))
r1 <- lm(ExpA$chg_mass ~ ExpA$trt)
resid(r1)
qqnorm(resid(r1))
qqline(resid(r1))
plot(resid(r1) ~ ExpA$chg_mass)
hist(r1)
hist(resid(r1))
qqnorm(resid(r1))
qqline(resid(r1))
fligner.test(trans_chg_mass ~ interaction(cage, sed_nut, watercol_nut), data = ExpA)
ExpA <- read.csv(file.choose(), header = T)
head(ExpA)
ExpA$cage <- as.factor(ExpA$cage)
ExpA$sed_nut <- as.factor(ExpA$sed_nut)
ExpA$watercol_nut <- as.factor(ExpA$watercol_nut)
modelA.1 <- glm(chg_mass ~ cage + sed_nut + watercol_nut, family = poisson(link = log), data = ExpA)
modelA.1 <- lm(chg_mass ~ cage + sed_nut + watercol_nut, data = ExpA)
summary(modelA.1)
anova(modelA.1)
modelA.1 <- lm(pctchg_biomass ~ cage + sed_nut + watercol_nut, data = ExpA)
summary(modelA.1)
anova(modelA.1)
modelA.1 <- lm(pctchg_biomass ~ cage:sed_nut:watercol_nut, data = ExpA)
summary(modelA.1)
anova(modelA.1)
alias(modelA.1)
cor(ExpA)
modelA.1 <- lm(pctchg_biomass ~ cage + sed_nut + watercol_nut + cage:sed_nut + cage:watercol_nut + sed_nut:watercol_nut + cage:sed_nut:watercol_nut, data = ExpA)
summary(modelA.1)
anova(modelA.1)
modelA.1 <- lm(chg_mass ~ cage + sed_nut + watercol_nut + cage:sed_nut + cage:watercol_nut + sed_nut:watercol_nut + cage:sed_nut:watercol_nut, data = ExpA)
summary(modelA.1)
anova(modelA.1) # signifcant three way interaction
model.matrix(modelA.1)
plot(modelA.1$fit, rstudent(modelA.1), xlab = "model fit", ylab = "studentized deleted residuals", ylim = c(-3,3))
abline(h=0, lty=2)
abline(h=-2, lty=2)
abline(h=2, lty=2)
plot(ExpA)
plot(modelA.1$fit, rstudent(modelA.1), xlab = "model fit", ylab = "studentized deleted residuals", ylim = c(-3,3))
abline(h=0, lty=2)
abline(h=-2, lty=2)
abline(h=2, lty=2)
qqnorm(ExpA)
qqplot(ExpA)
qqplot(ExpA$chg_mass)
?qqplot
qqnorm(ExpA$chg_mass)
plot(modelA.1$fit, rstudent(modelA.1), xlab = "model fit", ylab = "studentized deleted residuals", ylim = c(-3,3))
abline(h=0, lty=2)
abline(h=-2, lty=2)
abline(h=2, lty=2)
?boxplot
boxplot(rstudent(modelA.1))
plot(modelA.1$fit, rstudent(modelA.1), xlab = "model fit", ylab = "studentized deleted residuals", ylim = c(-3,3))
abline(h=0, lty=2)
abline(h=-2, lty=2)
abline(h=2, lty=2)
DFFITS <- dffits(modelA.1)
DFFITS
summary(modelA.1)
cooks.distance(modelA.1)
pf(cooks.distance(modelA.1), df1=8, df2=54, lower.tail=F) #df1 = number of parameters fitted, df2 = sample size - df1
DFFITS[DFFITS > 1]
DFFITS[DFFITS > 0]
ExpA
cooks <- cooks.distance(modelA.1)
pf(cooks, df1=8, df2=54, lower.tail=F) #df1 = number of parameters fitted, df2 = sample size - df1
cooks[cooks >1]
DFBETAS <- dfbetas(modelA.1)
DFFITS[DFFITS >1] # no values > 1, no leverage points
cooks[cooks >1]
cooks_pval <- pf(cooks, df1=8, df2=54, lower.tail=F) #df1 = number of parameters fitted, df2 = sample size - df1
cooks_pval[cooks_pval < 0.05]
DFBETAS[DFBETAS >1]
shapiro.test(ExpA)
shapiro.test(ExpA$chg_mass)
with(ExpA, tapply(chg_mass, trt, shapiro.test)
modelA.2 <- glm(chg_mass ~ trt, data = ExpA)
summary(modelA.2)
anova(modelA.2)
1-pf(1.9927, 7, 54)
modelA.2
summary(modelA.1)
interaction.plot(ExpA$sed_nut, ExpA$watercol_nut, ExpA$chg_mass)
ExpA <- read.csv(file.choose(), header = T)
interaction.plot(ExpA$sed_nut, ExpA$watercol_nut, ExpA$chg_mass)
ExpA$cage <- as.factor(ExpA$cage)
ExpA$sed_nut <- as.factor(ExpA$sed_nut)
ExpA$watercol_nut <- as.factor(ExpA$watercol_nut)
interaction.plot(ExpA$sed_nut, ExpA$watercol_nut, ExpA$chg_mass)
interaction.plot(ExpA$sed_nut, ExpA$cage, ExpA$chg_mass)
interaction.plot(ExpA$watercol_nut, ExpA$cage, ExpA$chg_mass)
chg_mass_caged <- subset(ExpA$chg_mass, ExpA$cage == 1)
chg_mass_uncaged <- subset(ExpA$chg_mass, ExpA$cage == 0)
chg_mass_caged <- subset(ExpA$chg_mass, ExpA$cage == 1)
chg_mass_uncaged <- subset(ExpA$chg_mass, ExpA$cage == 0)
interaction.plot(ExpA$sed_nut, ExpA$watercol_nut, chg_mass_caged)
ExpA_caged <- subset(ExpA, ExpA$cage == 1)
ExpA_uncaged <- subset(ExpA, ExpA$cage == 0)
interaction.plot(ExpA_caged$sed_nut, ExpA_caged$watercol_nut, ExA_caged$chg_mass)
interaction.plot(ExpA_caged$sed_nut, ExpA_caged$watercol_nut, ExpA_caged$chg_mass, main = "caged", xlab = "sediment nut", ylab = "water column nut")
interaction.plot(ExpA_uncaged$sed_nut, ExpA_uncaged$watercol_nut, ExpA_uncaged$chg_mass, main = "uncaged", xlab = "sediment nut", ylab = "water column nut")
interaction.plot(ExpA_caged$sed_nut, ExpA_caged$watercol_nut, ExpA_caged$chg_mass, main = "caged", xlab = "sediment nut", ylab = "water column nut")
interaction.plot(ExpA_caged$sed_nut, ExpA_caged$watercol_nut, ExpA_caged$chg_mass, main = "caged")
interaction.plot(ExpA_uncaged$sed_nut, ExpA_uncaged$watercol_nut, ExpA_uncaged$chg_mass, main = "uncaged")
ExpA_uncaged
mean.rm.na <- function(ExpA_uncaged$mass_chg) mean(ExpA_uncaged$mass_chg,na.rm = T)
mean.rm.na <- function(x) mean(x$mass_chg,na.rm = T)
mean.rm.na <- function(x) mean(ExpA_uncaged$mass_chg,na.rm = T)
ExpA_uncaged
mean.rm.na <- function(x) mean(ExpA_uncaged,na.rm = T)
ExpA_uncaged
mean.rm.na <- function(ExpA_uncaged) mean(ExpA_uncaged,na.rm = T)
ExpA_uncaged
mean.rm.na <- mean(ExpA_uncaged,na.rm = T)
mean.rm.na <- mean(ExpA_uncaged$chg_mass,na.rm = T)
ExpA_uncaged$chg_mass
mean.rm.na
mean(ExpA_uncaged$chg_mass)
sum(ExpA_uncaged$chg_mass)/30
interaction.plot(ExpA_uncaged$sed_nut, ExpA_uncaged$watercol_nut, mean.rm.na, main = "uncaged")
ExpA_uncaged_na.rm_sed <- function(ExpA_uncaged$sed_nut, na.rm = T)
ExpA.na.omit <- na.omit(ExpA)
View(ExpA.na.omit)
modelA.1 <- lm(chg_mass ~ cage + sed_nut + watercol_nut + cage:sed_nut + cage:watercol_nut + sed_nut:watercol_nut + cage:sed_nut:watercol_nut, data = ExpA)
model.matrix(modelA.1)
summary(modelA.1)
anova(modelA.1) # signifcant three way interaction
# studentized deleted residuals vs. model fits
plot(modelA.1$fit, rstudent(modelA.1), xlab = "model fit", ylab = "studentized deleted residuals", ylim = c(-3,3))
abline(h=0, lty=2)
abline(h=-2, lty=2)
abline(h=2, lty=2)
DFFITS <- dffits(modelA.1)
DFFITS[DFFITS >1] # no values > 1, no leverage points
cooks <- cooks.distance(modelA.1)
cooks[cooks >1]
cooks_pval <- pf(cooks, df1=8, df2=54, lower.tail=F) #df1 = number of parameters fitted, df2 = sample size - df1
cooks_pval[cooks_pval < 0.05] # no interesting/significant leverage points
DFBETAS <- dfbetas(modelA.1)
DFBETAS[DFBETAS >1] # no leverage points
shapiro.test(ExpA$chg_mass) # p = 0.7811, response var seems to be normally dist.
interaction.plot(ExpA_caged.na.omit$sed_nut, ExpA_caged.na.omit$watercol_nut, ExpA_caged.na.omit$chg_mass, main = "caged")
interaction.plot(ExpA_caged$sed_nut, ExpA_caged$watercol_nut, ExpA_caged$chg_mass, main = "caged")
ExpA_uncaged <- subset(ExpA.na.omit, ExpA$cage == 0)
interaction.plot(ExpA_uncaged$sed_nut, ExpA_uncaged$watercol_nut, ExpA_uncaged$chg_mass, main = "uncaged")
interaction.plot(ExpA_caged$sed_nut, ExpA_caged$watercol_nut, ExpA_caged$chg_mass, main = "caged")
interaction.plot(ExpA_uncaged$sed_nut, ExpA_uncaged$watercol_nut, ExpA_uncaged$chg_mass, main = "uncaged")
interaction.plot(ExpA_uncaged$sed_nut, ExpA_uncaged$watercol_nut, ExpA_uncaged$chg_mass, main = "uncaged")
)
main = "caged")
interaction.plot(ExpA_caged$sed_nut, ExpA_caged$watercol_nut, ExpA_caged$chg_mass,
fun = mean,
type = c("b"),
legend = TRUE,
trace.label = "water column nut",
fixed = TRUE,
xlab = "sediment nut",
ylab = "change in mass",
main = "caged")
interaction.plot(ExpA_caged$sed_nut, ExpA_caged$watercol_nut, ExpA_caged$chg_mass,
fun = mean,
type = c("l"),
legend = TRUE,
trace.label = "water column nut",
fixed = TRUE,
xlab = "sediment nut",
ylab = "change in mass",
ylim = c(0, 4)
main = "caged")
interaction.plot(ExpA_caged$sed_nut, ExpA_caged$watercol_nut, ExpA_caged$chg_mass,
fun = mean,
type = c("l"),
legend = TRUE,
trace.label = "water column nut",
fixed = TRUE,
xlab = "sediment nut",
ylab = "change in mass",
ylim = c(0, 4),
main = "caged"
)
interaction.plot(ExpA_uncaged$sed_nut, ExpA_uncaged$watercol_nut, ExpA_uncaged$chg_mass,
main = "uncaged",
fun = mean,
type = c("l"),
legend = TRUE,
trace.label = "water column nut",
fixed = TRUE,
xlab = "sediment nut",
ylab = "change in mass",
ylim = c(0, 4),
main = "caged"
)
interaction.plot(ExpA_uncaged$sed_nut, ExpA_uncaged$watercol_nut, ExpA_uncaged$chg_mass,
fun = mean,
type = c("l"),
legend = TRUE,
trace.label = "water column nut",
fixed = TRUE,
xlab = "sediment nut",
ylab = "change in mass",
ylim = c(0, 4),
main = "uncaged"
)
interaction.plot(ExpA_caged$sed_nut, ExpA_caged$watercol_nut, ExpA_caged$chg_mass,
fun = mean,
type = c("l"),
legend = TRUE,
trace.label = "water column nut",
fixed = TRUE,
xlab = "sediment nut",
ylab = "change in mass",
ylim = c(0, 4),
main = "caged"
)
interaction.plot(ExpA_caged$sed_nut, ExpA_caged$watercol_nut, ExpA_caged$chg_mass,
fun = mean,
type = c("l"),
trace.label = "water column nut",
fixed = TRUE,
xlab = "sediment nut",
ylab = "change in mass",
ylim = c(0, 4),
main = "caged"
)
legend = FALSE
interaction.plot(ExpA_caged$sed_nut, ExpA_caged$watercol_nut, ExpA_caged$chg_mass,
fun = mean,
type = c("l"),
legend = FALSE
trace.label = "water column nut",
fixed = TRUE,
xlab = "sediment nut",
ylab = "change in mass",
ylim = c(0, 4),
main = "caged"
)
interaction.plot(ExpA_caged$sed_nut, ExpA_caged$watercol_nut, ExpA_caged$chg_mass,
fun = mean,
type = c("l"),
legend = FALSE,
trace.label = "water column nut",
fixed = TRUE,
xlab = "sediment nut",
ylab = "change in mass",
ylim = c(0, 4),
main = "caged"
)
legend(bottomright)
legend(bottomright, legend = c("0", "1"))
legend(x = "bottomright", legend = c("0", "1"))
legend(x = "bottomright", legend = c("0", "1"), lty = c(1, 2))
legend(x = "bottomright", legend = c("0", "1"), lty = c(2, 1))
legend(x = "bottomright", legend = c("0", "1"), lty = c(2, 1), border = FALSE)
legend(x = "bottomright", legend = c("0", "1"), lty = c(2, 1), title = "water column nut")
legend(x = "bottomright", legend = c("0", "1"), lty = c(2, 1), title = "water col nut")
interaction.plot(ExpA_caged$sed_nut, ExpA_caged$watercol_nut, ExpA_caged$chg_mass,
fun = mean,
type = c("l"),
legend = FALSE,
trace.label = "water column nut",
fixed = TRUE,
xlab = "sediment nut",
ylab = "change in mass",
ylim = c(0, 4),
main = "caged"
)
legend(x = "bottomright", legend = c("0", "1"), lty = c(2, 1), title = "water col nut", bty = "n")
interaction.plot(ExpA_uncaged$sed_nut, ExpA_uncaged$watercol_nut, ExpA_uncaged$chg_mass,
fun = mean,
type = c("l"),
legend = FALSE,
trace.label = "water column nut",
fixed = TRUE,
xlab = "sediment nut",
ylab = "change in mass",
ylim = c(0, 4),
main = "uncaged"
)
legend(x = "bottom", legend = c("0", "1"), lty = c(2, 1), title = "water col nut", bty = "n", horiz = TRUE)
legend(x = "topright", legend = c("0", "1"), lty = c(2, 1), title = "water col nut", bty = "n", horiz = TRUE)
interaction.plot(ExpA_uncaged$sed_nut, ExpA_uncaged$watercol_nut, ExpA_uncaged$chg_mass,
fun = mean,
type = c("l"),
legend = FALSE,
trace.label = "water column nut",
fixed = TRUE,
xlab = "sediment nut",
ylab = "change in mass",
ylim = c(0, 4),
main = "uncaged"
)
legend(x = "topright", legend = c("0", "1"), lty = c(2, 1), title = "water col nut", bty = "o", horiz = TRUE)
interaction.plot(ExpA_uncaged$sed_nut, ExpA_uncaged$watercol_nut, ExpA_uncaged$chg_mass,
fun = mean,
type = c("l"),
legend = FALSE,
trace.label = "water column nut",
fixed = TRUE,
xlab = "sediment nut",
ylab = "change in mass",
ylim = c(0, 4),
main = "uncaged"
)
legend(x = "topright", legend = c("0", "1"), lty = c(2, 1), title = "water col nut", bty = "o", horiz = TRUE, y.intersp = 1)
legend(x = "topright", legend = c("0", "1"), lty = c(2, 1), title = "water col nut", bty = "o", horiz = TRUE, y.intersp = 0.5)
legend(x = "topright", legend = c("0", "1"), lty = c(2, 1), title = "water col nut", bty = "o", horiz = TRUE, y.intersp = 0.75)
interaction.plot(ExpA_caged$sed_nut, ExpA_caged$watercol_nut, ExpA_caged$chg_mass,
fun = mean,
type = c("l"),
legend = FALSE,
trace.label = "water column nut",
fixed = TRUE,
xlab = "sediment nut",
ylab = "change in mass",
ylim = c(0, 4),
main = "caged"
)
legend(x = "bottomright", legend = c("0", "1"), lty = c(2, 1), title = "water col nut", bty = "o", horiz = TRUE, y.intersp = 0.75)
ylab = "change in mass (g)",
interaction.plot(ExpA_caged$sed_nut, ExpA_caged$watercol_nut, ExpA_caged$chg_mass,
fun = mean,
type = c("l"),
legend = FALSE,
trace.label = "water column nut",
fixed = TRUE,
xlab = "sediment nut",
ylab = "change in mass (g)",
ylim = c(0, 4),
main = "caged"
)
legend(x = "bottomright", legend = c("0", "1"), lty = c(2, 1), title = "water col nut", bty = "o", horiz = TRUE, y.intersp = 0.75)
interaction.plot(ExpA_uncaged$sed_nut, ExpA_uncaged$watercol_nut, ExpA_uncaged$chg_mass,
fun = mean,
type = c("l"),
legend = FALSE,
trace.label = "water column nut",
fixed = TRUE,
xlab = "sediment nut",
ylab = "change in mass (g)",
ylim = c(0, 4),
main = "uncaged"
)
legend(x = "topright", legend = c("0", "1"), lty = c(2, 1), title = "water col nut", bty = "o", horiz = TRUE, y.intersp = 0.75)
ExpA <- read.csv(file.choose(), header = T)
ExpA.na.omit <- na.omit(ExpA)
ExpA$cage <- as.factor(ExpA$cage)
ExpA$sed_nut <- as.factor(ExpA$sed_nut)
ExpA$watercol_nut <- as.factor(ExpA$watercol_nut)
modelA.1 <- lm(chg_mass ~ cage + sed_nut + watercol_nut + cage:sed_nut + cage:watercol_nut + sed_nut:watercol_nut + cage:sed_nut:watercol_nut, data = ExpA)
model.matrix(modelA.1)
summary(modelA.1)
anova(modelA.1)
